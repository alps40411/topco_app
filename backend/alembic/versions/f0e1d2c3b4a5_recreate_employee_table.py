"""Recreate employee table

Revision ID: f0e1d2c3b4a5
Revises: dbc2cea2c5b9
Create Date: 2025-08-14 17:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f0e1d2c3b4a5'
down_revision: Union[str, Sequence[str], None] = 'dbc2cea2c5b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # --- 手動加入：先刪除可能已存在的舊資料表，CASCADE 會一併處理關聯 --- 
    op.execute('DROP TABLE IF EXISTS employees CASCADE')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empno', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('department_no', sa.String(length=50), nullable=True),
    sa.Column('department_name', sa.String(length=100), nullable=True),
    sa.Column('department_abbr', sa.String(length=50), nullable=True),
    sa.Column('group_dept_no', sa.String(length=50), nullable=True),
    sa.Column('dclass', sa.String(length=50), nullable=True),
    sa.Column('xlevel', sa.String(length=50), nullable=True),
    sa.Column('admin_rank', sa.String(length=50), nullable=True),
    sa.Column('company_code', sa.String(length=50), nullable=True),
    sa.Column('group_emp_no', sa.String(length=50), nullable=True),
    sa.Column('quit_date', sa.Date(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['employees.id'], ),
    # --- 修正：users 表可能尚不存在，暫時移除 user_id 的 FK，或確保 users 表先建立 ---
    # 為了讓遷移穩定，暫時先不建立對 users 的 FK，假設 users 表由其他遷移管理
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_department_no'), 'employees', ['department_no'], unique=False)
    op.create_index(op.f('ix_employees_empno'), 'employees', ['empno'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_index(op.f('ix_employees_name'), 'employees', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_employees_name'), table_name='employees')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_empno'), table_name='employees')
    op.drop_index(op.f('ix_employees_department_no'), table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###